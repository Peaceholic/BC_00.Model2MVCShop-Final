<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PurchaseMapper"> 	
 	
	<resultMap type="purchase" id="purchaseSelectMap">
		<result property="tranNo" 				column="TRAN_NO" 			jdbcType="INTEGER"/>
  		<result property="purchaseProd.prodNo" 	column="PROD_NO" 			jdbcType="INTEGER"/>
  		<result property="buyer.userId" 		column="BUYER_ID"			jdbcType="VARCHAR"/>
  		<result property="paymentOption"		column="PAYMENT_OPTION" 	jdbcType="CHAR"/>
  		<result property="receiverName" 		column="RECEIVER_NAME" 		jdbcType="VARCHAR"/>
  		<result property="receiverPhone" 		column="RECEIVER_PHONE" 	jdbcType="VARCHAR"/>
  		<result property="divyAddr" 			column="DLVY_ADDR" 			jdbcType="VARCHAR"/>
  		<result property="divyRequest" 			column="DLVY_REQUEST" 		jdbcType="VARCHAR"/>
  		<result property="tranCode" 			column="TRAN_STATUS_CODE" 	jdbcType="CHAR"/>
  		<result property="orderDate" 			column="ORDER_DATA" 		jdbcType="DATE"/>  		 
  		<result property="divyDate" 			column="DLVY_DATE"			jdbcType="DATE"/>
  	</resultMap>	

	
	<!-- SQL : INSERT -->
	<insert id="addPurchase" parameterType="purchase">
		INSERT 
		INTO transaction(tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, demailaddr, dlvy_request, tran_status_code, order_data, dlvy_date)
		VALUES (
					seq_transaction_tran_no.NEXTVAL,
					#{purchaseProd.prodNo:INTEGER},
					#{buyer.userId:VARCHAR},
					#{paymentOption:CHAR},
					#{receiverName:VARCHAR},
					#{receiverPhone:VARCHAR},
					#{divyAddr:VARCHAR},
					#{divyRequest:VARCHAR},
					#{tranCode:CHAR},
					SYSDATE,
					#{divyDate:DATE} )
	</insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select id="getPurchaseByTran" parameterType="int" resultMap="purchaseSelectMap">
  		SELECT 	prod_no
  				, buyer_id
  				, payment_option
  				, receiver_name
  				, receiver_phone
  				, demailaddr
  				, dlvy_request
  				, dlvy_date
  				, order_data
  				, tran_status_code
  				, tran_no
		FROM transaction
		WHERE tran_no = #{tranNo}
  	  </select>
  	 
	  <!-- SQL : SELECT ONE -->
	  <select id="getPurchaseByProd" parameterType="int" resultMap="purchaseSelectMap">
  		SELECT 	prod_no
  				, buyer_id
  				, payment_option
  				, receiver_name
  				, receiver_phone
  				, demailaddr
  				, dlvy_request
  				, dlvy_date
  				, order_data
  				, tran_status_code
  				, tran_no
		FROM transaction
		WHERE prod_no = #{prodNo}
  	 </select>		 
		 
	 <!-- SQL : UPDATE -->
	 <!-- <update	id="updatePurchase"	parameterType="purchase" >
	   	UPDATE TRANSACTION
	   	<set>
	   		RECEIVER_PHONE 		= #{receiverPhone:VARCHAR}
			, prod_no			= #{purchaseProd.prodNo:INTEGER},
			, buyer_id			= #{buyer.userId:VARCHAR},
			, payment_option	= #{paymentOption:CHAR},
			, receiver_name		= #{receiverName:VARCHAR},
			, receiver_phone	= #{receiverPhone:VARCHAR},
			, demailaddr		= #{divyAddr:VARCHAR},
			, dlvy_request		= #{divyRequest:VARCHAR},
			SYSDATE,
			, DLVY_DATE	= #{divyDate:DATE}			
	 	</set>
	   	WHERE tran_no = #{tranNo}
	 </update>	  -->
	
	 
	<update	id="updatePurchase"	parameterType="purchase" >
	   	UPDATE TRANSACTION
	   	<set>
	   		RECEIVER_PHONE 	= #{receiverPhone:VARCHAR}
			, DEMAILADDR	= #{divyAddr:VARCHAR}
			, DLVY_REQUEST 	= #{divyRequest:VARCHAR}
			, DLVY_DATE		= #{divyDate:DATE}
	 	</set>
	   	WHERE tran_no = #{tranNo}
	 </update>	 

	 <!-- SQL : UPDATE -->
	 <update	id="updateTranCode"	parameterType="purchase" >
	   	UPDATE TRANSACTION
	   	<set>
	   		TRAN_STATUS_CODE = #{tranCode}
		</set>
	   	WHERE tran_no = #{tranNo}
	 </update>
		 		 
	<!-- SQL : SELECT LIST -->
	<select id="getPurchaseList" parameterType="map" resultMap="purchaseSelectMap">
  		SELECT *
  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
  						FROM ( SELECT t.tran_no, p.prod_no, t.order_data, t.tran_status_code
										FROM transaction t, product p, users u 
										WHERE t.prod_no = p.prod_no 
										AND t.buyer_id = u.user_id 
										AND u.user_id = #{buyerId}
										ORDER BY tran_no  ) inner_table
  						WHERE ROWNUM <![CDATA[<=]]> #{search.currentPage}*#{search.pageSize} )
  		WHERE row_seq BETWEEN (#{search.currentPage}-1)*#{search.pageSize}+1
  		AND #{search.currentPage}*#{search.pageSize}
	</select>
	
	<select  id="getTotalCount"  parameterType="map"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM( 	SELECT t.tran_no, p.prod_no, t.order_data, t.tran_status_code 
			  	FROM transaction t, product p, users u 
			  	WHERE t.prod_no = p.prod_no 
						AND t.buyer_id = u.user_id 
						AND u.user_id = #{buyerId}
				ORDER BY tran_no ) countTable						
	 </select>
	 
	<!-- SELECT * 
	 FROM ( SELECT inner_table. * ,  ROWNUM AS row_seq  
	 		FROM ( SELECT t.tran_no, t.buyer_id, t.receiver_name, t.receiver_phone, t.tran_status_code from users u, transaction t 
 					WHERE u.user_id = t.buyer_id and t.buyer_id='user01' 
					ORDER BY t.tran_no ) inner_table 	
			WHERE ROWNUM <=5 ) 
	 WHERE row_seq BETWEEN 1 AND 5 -->	 
	 
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	<!-- SQL : SELECT ROW Count -->	 
	 
</mapper>